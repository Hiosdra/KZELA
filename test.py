def sumPoint(a, b, p, x1, y1, x2, y2):
    if x1 == "e" and y1 == "e":
        return x2, y2
    elif x2 == "e" and y2 == "e":
        return x1, y1

    if x1 != x2:
        delta = (((y2 - y1) % p) * reciprocal_Phi_p((x2 - x1), p)) % p
        x3 = (pow(delta, 2, p) - (x1 % p) - (x2 % p)) % p
        y3 = (delta * (x1 - x3) - y1) % p
        return x3, y3

    if (x1 == x2) and (y1 == -y2):
        return "e", "e"

    if (x1 == x2) and (y1 == y2):
        delta = (((3 * pow(x1, 2, p) % p + a) % p) * reciprocal_Phi_p(2 * y1, p)) % p
        x3 = (pow(delta, 2, p) - (x1 % p) - (x2 % p)) % p
        y3 = (delta * (x1 - x3) - y1) % p
        return x3, y3

    if (x1 == x2) and (y1 == y2 % p):
        return "e", "e"


def extended_euklides(a, b):
    if b == 0:
        return 1, 0
    q, r = (a // b, a % b)
    s, t = extended_euklides(b, r)

    return t, s - q * t


def reciprocal_Phi_p(n, p):
    u, v = extended_euklides(n, p)

    if (u * n % p) == 1:
        if u < 0:
            return u + p
        return u
    elif v < 0:
        return v + p
    return v


if __name__ == '__main__':
    # P+Q
    print(sumPoint(
        464169141979840536991867611593246600861288635535739371605755567504129182107398241113941853,
        7769005976998019324983795957687810821664516143453046940561240362962155935403606417854483,
        1287992807810354321139932844968535317703403098153583526161152862239590226063279579511578187,
        1034654950084638831746002809911248199677955393345913144822633491391559186334287517468068227,
        622982739772524510034071074874168058444870189141442302327788893708975989454633062691443668,
        257099002269265375376865050026601393088527487503240282621829201756320470848852458906673263,
        300276749266133746608908605837094037847002543042721682292036203072905446961574457973827418
    ))

    # P+P
    print(sumPoint(
        464169141979840536991867611593246600861288635535739371605755567504129182107398241113941853,
        7769005976998019324983795957687810821664516143453046940561240362962155935403606417854483,
        1287992807810354321139932844968535317703403098153583526161152862239590226063279579511578187,
        1034654950084638831746002809911248199677955393345913144822633491391559186334287517468068227,
        622982739772524510034071074874168058444870189141442302327788893708975989454633062691443668,
        1034654950084638831746002809911248199677955393345913144822633491391559186334287517468068227,
        622982739772524510034071074874168058444870189141442302327788893708975989454633062691443668
    ))
