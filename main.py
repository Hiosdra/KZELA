def extended_euclides(a, b):
    s = 0
    old_s = 1
    r = b
    old_r = a

    while r != 0:
        quotient = old_r / r
        (old_r, r) = (r, old_r - quotient * r)
        (old_s, s) = (s, old_s - quotient * s)

    if b != 0:
        bezout_t = (old_r - old_s * a) / b
    else:
        bezout_t = 0
    return old_s, bezout_t, old_r


# task 1
def euclidInverse(a, m):
    y = 0
    x = 1
    m0 = m
    while a > 1:
        q = a // m
        t = m
        m = a % m
        a = t
        t = y
        y = x - q * y
        x = t
    if x < 0:
        x = x + m0
    return x


# task 2
def binaryPow(a, b, m):
    a %= m
    res = 1
    while b > 0:
        if b & 1:
            res = res * a % m
        a = a * a % m
        b >>= 1
    return res


# task 3
def quadratic_residue(a, p):
    ls = binaryPow(a, (p - 1) // 2, p)
    return -1 if ls == p - 1 else ls


if __name__ == '__main__':
    # task 1
    print(euclidInverse(
        1,
        6
    ))

    # task 2
    print(binaryPow(
        114490559043126076738153358744966087681953386182425573483404112031815201175394209446530718026054824536822393073768479394115941549919359895111725996451157521700161443180727996657988659990597046662665463765926411024939606661260667863176902524560156078905991604769638931779122326545032024160910696661027,
        391391460710934952447744356920347432818302403303325591886976492807319896968025226937614034635791513888335717473023250182271798945302849615194243154049546831368896945330379987670475241933068594152537330597969762722659261563190456905695749170316137931922395119952663460471204126820352679225013665046771,
        393847041276178206491396243212274945872070776985043237184044451747690284405703994938020592656894726519747568678264497623311685635604918597230323269556886420453871930400418329075629418384691272372863859327955756407280218398219170544142787007265395975232901233778590659508114573048528189504436995545652
    ))
    print(pow(
        1,
        2,
        6
    ))

    # task 3
    print(quadratic_residue(
        391391460710934952447744356920347432818302403303325591886976492807319896968025226937614034635791513888335717473023250182271798945302849615194243154049546831368896945330379987670475241933068594152537330597969762722659261563190456905695749170316137931922395119952663460471204126820352679225013665046771,
        557447646341221346636192772896901610558710893835414944403480118710131817164269282839046936145176310843035027195369552947724772574976124889744487830405662539681582010111238770266408227840530530562128937575104894419356210796751265695974980542800695284666417470596597594320307059087588663353662759831219
    ))
    print(quadratic_residue(
        393847041276178206491396243212274945872070776985043237184044451747690284405703994938020592656894726519747568678264497623311685635604918597230323269556886420453871930400418329075629418384691272372863859327955756407280218398219170544142787007265395975232901233778590659508114573048528189504436995545652,
        557447646341221346636192772896901610558710893835414944403480118710131817164269282839046936145176310843035027195369552947724772574976124889744487830405662539681582010111238770266408227840530530562128937575104894419356210796751265695974980542800695284666417470596597594320307059087588663353662759831219
    ))

    # task 4
